{"version":3,"sources":["utils/prettyBytes.js","utils/redableTime.js","utils/copyToClipboard.js","components/DriveItem.js","pages/Folder.js","pages/Share.js"],"names":["prettyBytes","num","exponent","neg","units","Math","min","floor","log","length","Number","pow","toFixed","redableTime","datetimeString","now","Date","getHours","getMinutes","getDate","getMonth","getFullYear","copyToClipboard","str","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","DriveItem","id","name","modifiedTime","iconLink","mimeType","size","isFolder","className","to","src","alt","onClick","navigator","share","title","url","window","location","origin","Folder","search","useState","query","setQuery","match","useRouteMatch","folderId","params","useSwr","fetch","then","res","json","data","error","searched","useMemo","files","filter","val","toLowerCase","indexOf","textAlign","color","type","placeholder","onChange","e","target","map","item","key","defaultProps","Share"],"mappings":"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","file":"static/js/4.547d2012.chunk.js","sourcesContent":["function prettyBytes(num) {\r\n  var exponent,\r\n    unit,\r\n    neg = num < 0,\r\n    units = [\"B\", \"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n  if (neg) num = -num;\r\n  if (num < 1) return (neg ? \"-\" : \"\") + num + \" B\";\r\n  exponent = Math.min(Math.floor(Math.log(num) / Math.log(1000)), units.length - 1);\r\n  num = Number((num / Math.pow(1000, exponent)).toFixed(2));\r\n  unit = units[exponent];\r\n  return (neg ? \"-\" : \"\") + num + \" \" + unit;\r\n}\r\n\r\nexport default prettyBytes;\r\n","function redableTime(datetimeString) {\r\n  const now = new Date(datetimeString);\r\n  return `${now.getHours()}:${now.getMinutes()} on ${now.getDate()}/${now.getMonth()}/${now.getFullYear()}`;\r\n}\r\n\r\nexport default redableTime;\r\n","function copyToClipboard(str) {\r\n  const el = document.createElement(\"textarea\");\r\n  el.value = str;\r\n  el.setAttribute(\"readonly\", \"\");\r\n  el.style.position = \"absolute\";\r\n  el.style.left = \"-9999px\";\r\n  document.body.appendChild(el);\r\n  el.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(el);\r\n}\r\n\r\nexport default copyToClipboard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport prettyBytes from \"../utils/prettyBytes\";\r\nimport redableTime from \"../utils/redableTime\";\r\nimport copyToClipboard from \"../utils/copyToClipboard\";\r\n\r\nfunction DriveItem({ id, name, modifiedTime, iconLink, mimeType, size }) {\r\n  const isFolder = mimeType === \"application/vnd.google-apps.folder\";\r\n\r\n  const onClickShare = () => {\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: name,\r\n        url: `${window.location.origin}/${isFolder ? \"share\" : \"file\"}/${id}`\r\n      });\r\n    } else {\r\n      copyToClipboard(`${window.location.origin}/${isFolder ? \"share\" : \"file\"}/${id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"drive-item\">\r\n      <Link to={isFolder ? `/${id}` : `/file/${id}`} className=\"drive-item-main\">\r\n        <div className=\"row items-center\">\r\n          <img className=\"drive-item-icon\" src={iconLink} alt={mimeType} />\r\n          <h3 className=\"drive-item-title\">{name}</h3>\r\n        </div>\r\n        <div className=\"drive-item-info\">\r\n          <div className=\"row flex-wrap space-between\">\r\n            <h4>Modified at: {redableTime(modifiedTime)}</h4>\r\n            {size && <h4>Size: {prettyBytes(size)}</h4>}\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <button className=\"no-border drive-item-btn\" onClick={onClickShare}>\r\n        <span className=\"btn-icon\">\r\n          <ion-icon name={navigator.share ? \"share-social-outline\" : \"copy-outline\"} />\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriveItem;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport useSwr from \"swr\";\r\nimport DriveItem from \"../components/DriveItem\";\r\n\r\nfunction Folder({ search, share }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const match = useRouteMatch(share ? \"/share/:folderId\" : \"/:folderId\");\r\n  const folderId = match ? match.params.folderId : \"\";\r\n  const { data, error } = useSwr(`/api/folder/${folderId}`, (url) => fetch(url).then((res) => res.json()));\r\n\r\n  const searched = useMemo(() => {\r\n    if (query.length < 3) return [];\r\n    return data.files.filter((val) => val.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }, [query, data]);\r\n\r\n  if (!data && !error)\r\n    return (\r\n      <>\r\n        {search && (\r\n          <input type=\"text\" name=\"query\" value={query} placeholder=\"Search in this folder...\" onChange={(e) => setQuery(e.target.value)} />\r\n        )}\r\n        <div className=\"loading-div\" />\r\n      </>\r\n    );\r\n  if (error) return <h4 style={{ textAlign: \"center\", color: \"red\" }}>Cannot find the folder</h4>;\r\n\r\n  return (\r\n    <>\r\n      {search && (\r\n        <input type=\"text\" name=\"query\" value={query} placeholder=\"Search in this folder...\" onChange={(e) => setQuery(e.target.value)} />\r\n      )}\r\n      {query.length >= 3 ? (\r\n        <>\r\n          <h4 className=\"drive-results-title\">Search results:</h4>\r\n          <div className=\"drive-items\">\r\n            {searched.map((item) => (\r\n              <DriveItem key={item.id} {...item} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"drive-items\">\r\n          {data.files.map((item) => (\r\n            <DriveItem key={item.id} {...item} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nFolder.defaultProps = { search: true, share: false };\r\n\r\nexport default Folder;\r\n","import React from \"react\";\r\nimport Folder from \"./Folder\";\r\n\r\nexport default function Share() {\r\n  return <Folder share={true} />;\r\n}\r\n"],"sourceRoot":""}